name: Verify Secrets Configuration

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to verify'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - backend
          - frontend

jobs:
  verify-backend-secrets:
    name: Verify Backend Secrets
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'all' || github.event.inputs.environment == 'backend'
    steps:
      - name: Check AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
        run: |
          if [ -z "$AWS_ACCESS_KEY_ID" ]; then
            echo "❌ AWS_ACCESS_KEY_ID not set"
            exit 1
          fi
          if [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
            echo "❌ AWS_SECRET_ACCESS_KEY not set"
            exit 1
          fi
          
          echo "✅ AWS credentials configured"
          
          # Verify AWS access
          aws sts get-caller-identity || echo "⚠️  AWS credentials invalid or insufficient permissions"

      - name: Check ECS secrets
        run: |
          if [ -z "${{ secrets.AWS_ECS_CLUSTER }}" ]; then
            echo "❌ AWS_ECS_CLUSTER not set"
            exit 1
          fi
          if [ -z "${{ secrets.AWS_ECS_SERVICE }}" ]; then
            echo "❌ AWS_ECS_SERVICE not set"
            exit 1
          fi
          if [ -z "${{ secrets.AWS_ECS_TASK_DEFINITION }}" ]; then
            echo "❌ AWS_ECS_TASK_DEFINITION not set"
            exit 1
          fi
          
          echo "✅ ECS secrets configured"
          echo "   Cluster: ${{ secrets.AWS_ECS_CLUSTER }}"
          echo "   Service: ${{ secrets.AWS_ECS_SERVICE }}"
          echo "   Task Definition: ${{ secrets.AWS_ECS_TASK_DEFINITION }}"

      - name: Check Safety API Key
        run: |
          if [ -z "${{ secrets.SAFETY_API_KEY }}" ]; then
            echo "⚠️  SAFETY_API_KEY not set (optional but recommended)"
          else
            echo "✅ SAFETY_API_KEY configured"
          fi

      - name: Summary
        run: |
          echo "## Backend Secrets Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Secret | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| AWS_ACCESS_KEY_ID | ${{ secrets.AWS_ACCESS_KEY_ID != '' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| AWS_SECRET_ACCESS_KEY | ${{ secrets.AWS_SECRET_ACCESS_KEY != '' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| AWS_REGION | ${{ secrets.AWS_REGION != '' && secrets.AWS_REGION || '⚠️ Default: us-east-1' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| AWS_ECS_CLUSTER | ${{ secrets.AWS_ECS_CLUSTER != '' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| AWS_ECS_SERVICE | ${{ secrets.AWS_ECS_SERVICE != '' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| AWS_ECS_TASK_DEFINITION | ${{ secrets.AWS_ECS_TASK_DEFINITION != '' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| SAFETY_API_KEY | ${{ secrets.SAFETY_API_KEY != '' && '✅' || '⚠️ Optional' }} |" >> $GITHUB_STEP_SUMMARY

  verify-frontend-secrets:
    name: Verify Frontend Secrets
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'all' || github.event.inputs.environment == 'frontend'
    steps:
      - name: Check AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
        run: |
          if [ -z "$AWS_ACCESS_KEY_ID" ]; then
            echo "❌ AWS_ACCESS_KEY_ID not set"
            exit 1
          fi
          if [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
            echo "❌ AWS_SECRET_ACCESS_KEY not set"
            exit 1
          fi
          
          echo "✅ AWS credentials configured"

      - name: Check S3/CloudFront secrets
        run: |
          if [ -z "${{ secrets.AWS_S3_BUCKET }}" ]; then
            echo "❌ AWS_S3_BUCKET not set"
            exit 1
          fi
          if [ -z "${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
            echo "❌ AWS_CLOUDFRONT_DISTRIBUTION_ID not set"
            exit 1
          fi
          if [ -z "${{ secrets.AWS_CLOUDFRONT_DOMAIN }}" ]; then
            echo "❌ AWS_CLOUDFRONT_DOMAIN not set"
            exit 1
          fi
          
          echo "✅ S3/CloudFront secrets configured"
          echo "   S3 Bucket: ${{ secrets.AWS_S3_BUCKET }}"
          echo "   CloudFront Distribution: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}"
          echo "   CloudFront Domain: ${{ secrets.AWS_CLOUDFRONT_DOMAIN }}"

      - name: Check VITE_API_URL
        run: |
          if [ -z "${{ secrets.VITE_API_URL }}" ]; then
            echo "⚠️  VITE_API_URL not set (will use default: http://localhost:8000)"
          else
            echo "✅ VITE_API_URL configured: ${{ secrets.VITE_API_URL }}"
          fi

      - name: Summary
        run: |
          echo "## Frontend Secrets Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Secret | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| AWS_ACCESS_KEY_ID | ${{ secrets.AWS_ACCESS_KEY_ID != '' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| AWS_SECRET_ACCESS_KEY | ${{ secrets.AWS_SECRET_ACCESS_KEY != '' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| AWS_REGION | ${{ secrets.AWS_REGION != '' && secrets.AWS_REGION || '⚠️ Default: us-east-1' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| AWS_S3_BUCKET | ${{ secrets.AWS_S3_BUCKET != '' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| AWS_CLOUDFRONT_DISTRIBUTION_ID | ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID != '' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| AWS_CLOUDFRONT_DOMAIN | ${{ secrets.AWS_CLOUDFRONT_DOMAIN != '' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| VITE_API_URL | ${{ secrets.VITE_API_URL != '' && '✅' || '⚠️ Default' }} |" >> $GITHUB_STEP_SUMMARY

  verify-docker-secrets:
    name: Verify Docker Registry
    runs-on: ubuntu-latest
    steps:
      - name: Check GITHUB_TOKEN
        run: |
          if [ -z "${{ secrets.GITHUB_TOKEN }}" ]; then
            echo "⚠️  GITHUB_TOKEN should be auto-generated"
          else
            echo "✅ GITHUB_TOKEN available (auto-generated)"
          fi

      - name: Summary
        run: |
          echo "## Docker Registry Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Secret | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| GITHUB_TOKEN | ✅ Auto-generated |" >> $GITHUB_STEP_SUMMARY

