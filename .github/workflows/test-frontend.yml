name: Frontend Tests

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
      - '.github/workflows/test-frontend.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8.15.0'

jobs:
  # ---------------------------------------------------------------------------
  # Job 1: Jest Unit Tests
  # ---------------------------------------------------------------------------
  jest-tests:
    name: Jest Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile

      - name: Run Jest tests
        working-directory: ./frontend
        run: pnpm run test:ci

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
        continue-on-error: true

      - name: Upload coverage HTML
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-coverage-html
          path: frontend/coverage/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-test-results
          path: frontend/coverage/
          retention-days: 7

  # ---------------------------------------------------------------------------
  # Job 2: Cypress E2E Tests
  # ---------------------------------------------------------------------------
  cypress-tests:
    name: Cypress E2E Tests
    runs-on: ubuntu-latest
    needs: []

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile

      - name: Build application
        working-directory: ./frontend
        run: pnpm run build
        env:
          VITE_API_URL: http://localhost:8000

      - name: Start development server
        working-directory: ./frontend
        run: pnpm run preview --port 3000 &
        env:
          VITE_API_URL: http://localhost:8000

      - name: Wait for server
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

      - name: Run Cypress tests
        working-directory: ./frontend
        run: pnpm run cypress:run:ci
        env:
          CYPRESS_baseUrl: http://localhost:3000

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: frontend/cypress/screenshots
          retention-days: 7

      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: frontend/cypress/videos
          retention-days: 7

  # ---------------------------------------------------------------------------
  # Job 3: Test Summary
  # ---------------------------------------------------------------------------
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [jest-tests, cypress-tests]
    if: always()

    steps:
      - name: Generate summary
        run: |
          echo "## Frontend Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Jest Unit Tests: ${{ needs.jest-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Cypress E2E Tests: ${{ needs.cypress-tests.result }}" >> $GITHUB_STEP_SUMMARY

